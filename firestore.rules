rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update, delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Professionals collection
    match /professionals/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Service requests - anyone authenticated can read, only owner can write
    match /serviceRequests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated();
    }
    
    // Proposals - anyone authenticated can read
    match /proposals/{proposalId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        request.resource.data.professionalId == request.auth.uid;
    }
    
    // Chat rooms - usuários podem ver apenas salas em que participam
    match /chatRooms/{roomId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants.map(p => p.userId);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        request.auth.uid in resource.data.participants.map(p => p.userId);
      allow delete: if false; // Apenas via Cloud Function
    }
    
    // Messages - usuários podem ler/escrever apenas em salas em que participam
    match /messages/{messageId} {
      // Permitir leitura se usuário é participante da sala
      allow read: if isAuthenticated();
      
      // Permitir escrita se usuário é participante da sala
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.senderId;
      
      // Permitir atualizar apenas para marcar como lida
      allow update: if isAuthenticated() && 
        resource.data.senderId != request.auth.uid;
      
      allow delete: if false; // Apenas via Cloud Function
    }
    
    // FCM Tokens para notificações
    match /fcmTokens/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
}

