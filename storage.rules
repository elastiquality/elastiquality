rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the file
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User profile images and documents
    match /users/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Professional files (certifications, portfolio)
    match /professionals/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Public portfolio images
    match /portfolio/{userId}/{allPaths=**} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Service request attachments
    match /serviceRequests/{requestId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Public assets (logos, icons, etc.)
    match /public/{allPaths=**} {
      allow read: if true; // Public
      allow write: if false; // Only admins
    }
  }
}

